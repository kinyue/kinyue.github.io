<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>FILO</title>
  <subtitle>F In Loneliness</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kinyue.github.io/"/>
  <updated>2016-04-24T07:55:38.004Z</updated>
  <id>http://kinyue.github.io/</id>
  
  <author>
    <name>Lance Lin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>末尾</title>
    <link href="http://kinyue.github.io/2016/01/12/the-tail-end/"/>
    <id>http://kinyue.github.io/2016/01/12/the-tail-end/</id>
    <published>2016-01-12T05:50:25.000Z</published>
    <updated>2016-04-24T07:55:38.004Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;文/ &lt;a href=&quot;http://waitbutwhy.com/2015/12/the-tail-end.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tim Urban&lt;/a&gt;&lt;br&gt;翻译/ &lt;a href=&quot;http://kinyue.github.io/about/&quot;&gt;Lance&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在去年的一篇文章中，我们用方阵图来表示人类寿命。按年记是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/thetailend/yearspan.jpg&quot; alt=&quot;年龄矩阵&quot;&gt;&lt;/p&gt;
&lt;p&gt;按月记是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/thetailend/monthspan.png&quot; alt=&quot;月份矩阵&quot;&gt;&lt;/p&gt;
&lt;p&gt;按星期记有这么多：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/thetailend/weekspan.png&quot; alt=&quot;星期矩阵&quot;&gt;&lt;/p&gt;
&lt;p&gt;其实上次写文章的时候，我也画了一张按天计算的方阵，看起来有点太密集了，所以没有放进去。这次管他呢：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/thetailend/dayspan.png&quot; alt=&quot;日期矩阵&quot;&gt;&lt;/p&gt;
&lt;p&gt;这张日期矩阵跟那张星期矩阵一样震惊了我。里边的每一个一点仅仅是一个再普通不过的星期二、星期五或者星期天，但即使是一个好运到能活90年的人呢，都能把他生命里的每一天都填到一页纸里去。&lt;/p&gt;
&lt;p&gt;不过在写那篇文章的时候，我还想起了另外一些东西。&lt;/p&gt;
&lt;p&gt;与其用时间为单位来衡量你的人生，不如用一些事情或者活动来衡量。以我自己（插图都是以译者为例，因为这样比较有代入感）为例：&lt;/p&gt;
&lt;p&gt;我今年28（你只有算算自己的才能知道时间到底过得多快），假设我RP爆棚能一直敲代码敲到90岁（感觉一点都不幸运）。现在是在冬天，那么我将还有62个冬天（以及春天夏天秋天）可以敲代码：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/thetailend/winterchart.jpg&quot; alt=&quot;生命中剩下的冬天，不够啊！&quot;&gt;&lt;/p&gt;
&lt;p&gt;我估计我一年平均出去旅游一次吧，那么希望还有60几次旅游的机会：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/thetailend/tourschart.jpg&quot; alt=&quot;生命中剩下旅游的次数，好少啊！&quot;&gt;&lt;/p&gt;
&lt;p&gt;我并不怎么看春晚，顶多开着电视当背景音乐。我大概还有60几次拿春晚当背景音乐的机会：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/thetailend/springfestivalchart.jpg&quot; alt=&quot;生命中剩下的春晚，一点不嫌少~&quot;&gt;&lt;/p&gt;
&lt;p&gt;以&lt;a href=&quot;readingtaste.com/user/kinyue/stat/books&quot;&gt;ReadingTaste&lt;/a&gt;的统计看，我一年平均大约会读掉37本书，所以尽管总觉得未来还有无数的书可以看，但实际上我得从里面最多选出2294本，剩下的在我升天之后都只能永远待在“想读”的列表里了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/thetailend/readingchart.png&quot; alt=&quot;生命中剩下的书，看上去还挺多的&quot;&gt;&lt;/p&gt;
&lt;p&gt;尽管我不是一个足球迷，但4年一届的世界杯我还是会看的。下一届世界杯在2018年开始，那么我还有15届世界杯可以看。或许我应该考虑赌球。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/thetailend/worldcup.jpg&quot; alt=&quot;生命中剩下的世界杯，可以赌因为次数够少&quot;&gt;&lt;/p&gt;
&lt;p&gt;从1988年出生到现在，我见证过三次国家主席的轮换，按十年一次换届计算，我还能见到六位国家主席上任。还是以图片表示吧：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/thetailend/flags.png&quot; alt=&quot;啊，主席们&quot;&gt;&lt;/p&gt;
&lt;p&gt;然后呢，假设我真悲催地敲代码敲到90岁，那么我还有744个月的工资可以领。领着这点死工资，差不多也是每月一次的频率我会去吃饺子，每次总得有12个吧，这样算下来，我这辈子还得吃这么大一坨饺子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/thetailend/dumplings.png&quot; alt=&quot;生命中剩下的饺子们，我觉得我会吐...&quot;&gt;&lt;/p&gt;
&lt;p&gt;但这些其实都不是很重要。上面提到的大部分事情都大概以固定的频率出现在我的生活中，它们在时间上的分布是很均匀的。我的人生过了大约1/3，这些事情也大约被我经历了1/3。&lt;/p&gt;
&lt;p&gt;另一些真正让我想更多的，更为重要的东西，不像上面的例子那样均匀地分布在人的一生中。这些经历要么已经达到末尾要么还没怎么开始，它们与你的年龄并不对称，比如：&lt;/p&gt;
&lt;p&gt;关系。&lt;/p&gt;
&lt;p&gt;看看我的爸妈，他们今年都刚刚58岁。在人生的前18年里，我95%以上的日子都是跟父母渡过的（直到高中都是走读生）。但自从离开了家乡去读大学，每年回家两趟，合起来每年70天不到。工作之后更少了，每年撑死了就15天。 每年跟爸妈过的时间只有小时候的4%左右。&lt;/p&gt;
&lt;p&gt;让我们再做个乐观的估计，假设我非常幸运，跟父母之间还有33年相处的时光。保持每年15天计算，那么跟爸妈相处的天数总共还有495天，仅仅是一年多一个季度。&lt;/p&gt;
&lt;p&gt;当想到这一点，你就会意识到，即使你远未到达自己人生的末尾，但是你却已经非常接近与你人生中最重要的人相处的末尾。如果我们把在父母身边渡过的每一天和将要和父母渡过的每天画出来就会更加明显：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/thetailend/parents.png&quot; alt=&quot;与父母相处的时间&quot;&gt;&lt;/p&gt;
&lt;p&gt;结果就是大学毕业之后，我就已经花掉了93%能与父母相处的时间。我们所剩的只有7%。这已经到了非常末尾了。&lt;/p&gt;
&lt;p&gt;我跟我弟弟的情况也类似。我们在同一个屋子里住了有16年，现在我们每年见面的几次大约比跟父母见面的多一点点。这样算下来，我们可能剩还有19%的相处时间。&lt;/p&gt;
&lt;p&gt;通常老朋友之间亦是如此。比如大学室友，四年下来住在一个屋子里得有1000天以上。而现在如果居住的城市隔得比较远，那么一年也就能见个一两次，那么剩下的见面次数大约也来到了末尾的11%。住得近的，一个月见一次的话，那也剩下不到一半的时间。&lt;/p&gt;
&lt;p&gt;可我们知道了这些又能怎样呢？&lt;/p&gt;
&lt;p&gt;撇开我私底下认为科技进步能让我们都再活500年的想法，你可以采取下面三种办法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;跟你关心与在乎的人住在一起。见一个住在同一个城市的人的机会要大过不同城市的人10倍以上。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;排好优先级。你跟某一个人剩余的见面次数很大程度上取决于这个人在你人生优先级列表的哪个位置上。确保由你自己来制定这份列表——而不是由着潜意识。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;高质量时间很重要。如果你跟某种你关心的人相处时间只剩最后的10%了，那么当你们见面时在心理记着这一点，并且要珍惜。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;好吧，这篇其实有点水，不过当时看到这张图还是小小地被震撼了下。翻译这篇一来是比较简单，二来里面的插图比较适合用Processing处理，但是画这些插图依然花了我三四个完整的夜晚，这让我有造轮子的冲动。&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;文/ &lt;a href=&quot;http://waitbutwhy.com/2015/12/the-tail-end.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Tim Urban&lt;/a&gt;&lt;br&gt;翻译/ &lt;a href=&quot;ht
    
    </summary>
    
      <category term="Noisy" scheme="http://kinyue.github.io/categories/Noisy/"/>
    
    
      <category term="translate" scheme="http://kinyue.github.io/tags/translate/"/>
    
      <category term="figures" scheme="http://kinyue.github.io/tags/figures/"/>
    
  </entry>
  
  <entry>
    <title>知乎问题页面阅读模式</title>
    <link href="http://kinyue.github.io/2015/09/14/stylish-zhihu-reading/"/>
    <id>http://kinyue.github.io/2015/09/14/stylish-zhihu-reading/</id>
    <published>2015-09-14T05:43:55.000Z</published>
    <updated>2016-04-24T08:30:28.432Z</updated>
    
    <content type="html">&lt;p&gt;自从用上Readability/Pocket这一类的工具之后，有时候在知乎看文章就会想，要是能有个脚本可以把页面转换成类似于Pocket那样的样式就好了。当然我可以直接保存到Readability或者Pocket上，不过这样做就得按一次按钮并且打开Pocket的页面，或许还要登陆，其实也挺麻烦的。有些其他的页面firefox也支持阅读模式，但并不常见，所谓可遇而不可求。&lt;br&gt;直到前阵子，我发现了个FF有个插件叫Stylish。这个插件呢挺有意思的，可以说CSS版本的Greasemonkey。它有个脚本库，应用这些脚本库里用户上传的脚本，你可以随心所欲地自定义常用网站的样式。比如黑暗版谷歌：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/stylish-zhihu-reading/dark_google.png&quot; alt=&quot;Dark Google&quot;&gt;&lt;/p&gt;
&lt;p&gt;当然啦，上面也有不少适用于知乎的自定义样式，比如由&lt;a href=&quot;https://userstyles.org/users/282714&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;tomowm&lt;/a&gt;制作的&lt;a href=&quot;https://userstyles.org/styles/109460/zhihu-evernoe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;知乎答案阅读模式&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/stylish-zhihu-reading/zhihu_read_tomowm.png&quot; alt=&quot;Zhihu Answer Read Mode&quot;&gt;&lt;/p&gt;
&lt;p&gt;看上去效果还蛮简洁大方的。但是我觉得还有调整的余地，一是知乎打开单个答案并不常用，二来字体大小、配色和布局我仍不太满意。于是无聊中花了点时间稍微修改了下，变成这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/stylish-zhihu-reading/zhihu_read_lance_1.png&quot; alt=&quot;Zhihu Question Read Mode 1&quot;&gt;&lt;/p&gt;
&lt;p&gt;有个比较不一样的地方在于，我认为问题页面要比答案页面常用，因此我的样式表匹配的是问题页面。有多个答案的时候是这样的：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/stylish-zhihu-reading/zhihu_read_lance_2.png&quot; alt=&quot;Zhihu Question Read Mode 2&quot;&gt;&lt;/p&gt;
&lt;p&gt;当然直接把所有的问题页面都改成这样也不好，有些按钮和操作也可能要用到。我又懒得真的为这个去开发一个插件出来，所以采用了折中的办法，把url的匹配表达式写成这样子&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;regexp(&amp;quot;http://www.zhihu.com/question/.*\\?&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样子，只要在问题页面地址栏加多一个问号再ENTER就可以转换成阅读模式了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/stylish-zhihu-reading/zhihu_read_url.png&quot; alt=&quot;Zhihu Question Read Mode URL&quot;&gt;&lt;/p&gt;
&lt;p&gt;最后，源代码如下，有兴趣的可自行修改添加到Stylish里面去。&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;151&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@-&lt;span class=&quot;keyword&quot;&gt;moz&lt;/span&gt;-&lt;span class=&quot;keyword&quot;&gt;document&lt;/span&gt; regexp(&lt;span class=&quot;string&quot;&gt;&quot;https://www.zhihu.com/question/.*\\?&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zu-top&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zm-tag-editor-labels&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zg-clear&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zm-meta-panel&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zu-main-sidebar&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.count&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.up&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.icon&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.vote-arrow&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;span&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.label&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.down&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zh-answers-title&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zm-list-avatar&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zm-item-vote-info&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.more-awesome&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zh-summary&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.summary&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.clearfix&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zm-item-vote-count&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zg-link-litblue-normal&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zu-edit-button&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.feed-item&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zm-editable-editor-wrap&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zg-wrap&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zu-main&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-family&lt;/span&gt;: MSYH;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;12px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.highlight&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#F6FFEC&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;body&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#F6F4EC&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.up&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;button&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.down&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zm-item-vote-count&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.zm-votebar&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.up&lt;/span&gt;, &lt;span class=&quot;selector-class&quot;&gt;.zm-votebar&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.down&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.zm-item-expanded&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.zm-votebar&lt;/span&gt;, &lt;span class=&quot;selector-class&quot;&gt;.zh-question-answer-wrapper&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.zm-votebar&lt;/span&gt;, &lt;span class=&quot;selector-class&quot;&gt;.zh-question-answer-wrapper&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.zm-item-vote-info&lt;/span&gt;, &lt;span class=&quot;selector-class&quot;&gt;.zm-item-expanded&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.zm-item-vote-info&lt;/span&gt;, &lt;span class=&quot;selector-class&quot;&gt;.zm-item-expanded&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.zm-item-meta&lt;/span&gt;, &lt;span class=&quot;selector-class&quot;&gt;.zm-item-expanded&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.collapse&lt;/span&gt;, &lt;span class=&quot;selector-class&quot;&gt;.zm-item-expanded&lt;/span&gt; &lt;span class=&quot;selector-class&quot;&gt;.full-content&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: none; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zu-main-content-inner&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.with-indention-votebar&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;180px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zu-main-content-inner&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;180px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zu-main-content&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;4px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1px&lt;/span&gt; grey;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;padding-top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;60px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zm-item-answer&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-bottom&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;20px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zm-editable-content&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-style&lt;/span&gt;: normal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zm-editable-content&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.clearfix&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-style&lt;/span&gt;: normal;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.answer-status&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;background&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;#dddddd&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;selector-class&quot;&gt;.zm-item-answer-author-wrap&lt;/span&gt; &lt;span class=&quot;selector-tag&quot;&gt;a&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-top&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;50px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;margin-left&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;attribute&quot;&gt;font-size&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;16px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;自从用上Readability/Pocket这一类的工具之后，有时候在知乎看文章就会想，要是能有个脚本可以把页面转换成类似于Pocket那样的样式就好了。当然我可以直接保存到Readability或者Pocket上，不过这样做就得按一次按钮并且打开Pocket的页面，或许还
    
    </summary>
    
      <category term="Tools" scheme="http://kinyue.github.io/categories/Tools/"/>
    
    
      <category term="css" scheme="http://kinyue.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Processing中的文字对齐</title>
    <link href="http://kinyue.github.io/2014/12/21/processing-text-alignment/"/>
    <id>http://kinyue.github.io/2014/12/21/processing-text-alignment/</id>
    <published>2014-12-21T04:47:03.000Z</published>
    <updated>2016-04-24T08:47:31.407Z</updated>
    
    <content type="html">&lt;h1 id=&quot;几个排版的概念&quot;&gt;&lt;a href=&quot;#几个排版的概念&quot; class=&quot;headerlink&quot; title=&quot;几个排版的概念&quot;&gt;&lt;/a&gt;几个排版的概念&lt;/h1&gt;&lt;p&gt;Processing中有几个跟文字有关的API让我很困惑。比如它有获取文字所占长度的textWidth()，但没有对应的获取高度的textHeight()。另外textAscent()和textDescent()两个函数又是干嘛的呢？&lt;a href=&quot;https://www.processing.org/reference/textDescent_.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;API&lt;/a&gt;里的描述是：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Returns descent of the current font at its current size. This information is useful for determining the height of the font below the baseline.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;看到这里大概能猜到，baseline应该是字符对齐的线，而descent和ascent大概是下和上的边界跟baseline的距离。但是这几条线之间有什么关系，他们又是怎么算的呢？试着把它们画出来是这样的。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/img1.png&quot; alt=&quot;Default Vertical Alignment&quot;&gt;&lt;/p&gt;
&lt;p&gt;可一旦给他们设定对齐方式之后，奇怪的事情便发生了。将文字设为顶端对齐，然后三条线的计算方式不变，得到的结果是这样的。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;textAlign(LEFT, TOP);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/img2.png&quot; alt=&quot;Top Vertical Alignment&quot;&gt;&lt;/p&gt;
&lt;p&gt;底部对齐是这样的。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;textAlign(LEFT, BOTTOM);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/img3.png&quot; alt=&quot;Bottom Vertical Alignment&quot;&gt;&lt;/p&gt;
&lt;p&gt;好吧，那改成居中试一下。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;textAlign(LEFT, CENTER);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/img4.png&quot; alt=&quot;Center Vertical Alignment&quot;&gt;&lt;/p&gt;
&lt;p&gt;结果都完全走样了。从上面几张图来看，TOP和BOTTOM这两种对齐的上边线和下边线的位置还是可以算出来的，但是CENTER则让人摸不着头脑。这几个概念到底是什么呢？有没有明确的可以调用的计算公式呢？&lt;/p&gt;
&lt;p&gt;维基上有这么一张图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/Typography_Line1.png&quot; alt=&quot;Typography Line&quot;&gt;&lt;/p&gt;
&lt;p&gt;参考&lt;a href=&quot;http://pfaedit.sourceforge.net/glossary.html#A&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;术语表&lt;/a&gt;排版业应该是这样定义这几个术语的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Baseline 字符主体下部对齐的线，也是人们感受文字位置同一行时不可见的那条线。英文字体一般这条线都会对得齐，但维基也说了：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;In some scripts, parts of glyphs lie below the baseline.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;x-height 小写字母主体上部水平对齐线，x的顶部或者t的横线会刚好对齐，但像i或者n等有尖端或弧度的线，则会略微向上穿透，这点可以从上图看出。维基上讲x-height一般跟mean line是一致的，而且：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The mean line, also called the midline, is half the distance from the baseline to the cap height.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但很多字体为了表现效果，常常使x-height偏移mean line的位置。因此，这条线的位置是字体相关的，若API没有提供相关功能，则只能估算。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;cap height 大写字母主体上部水平对齐线。如上图的字母S。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ascent 是字符的上边界，向上突出最多的字母突出部分也不会超过这条线。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;descent 同理，是字符的下边界。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本文把这五个概念合称为字形五线。有了这几个概念，再来研究Processing是怎么算出它们的位置的，以及文字是怎么对齐的。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;默认对齐&quot;&gt;&lt;a href=&quot;#默认对齐&quot; class=&quot;headerlink&quot; title=&quot;默认对齐&quot;&gt;&lt;/a&gt;默认对齐&lt;/h1&gt;&lt;p&gt;Processing中的textAscent()和textDescent()来自于类PApplet，追溯源代码，发现最终取值于字体类PFont的成员变量：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * The ascent of the font. If the &#39;d&#39; character is present in this PFont,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * this value is replaced with its pixel height, because the values returned&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * by FontMetrics.getAscent() seem to be terrible.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; ascent;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * The descent of the font. If the &#39;p&#39; character is present in this PFont,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * this value is replaced with its lowest pixel height, because the values&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; * returned by FontMetrics.getDescent() are gross.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; descent;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这是字符size为1时的ascent和descent的值，代码实际返回的是：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;textFont.ascent() * textSize;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;从代码上看，这个返回值与字体大小相关，但是实际上下面这张图里代码返回的明显不是会与字形接触到的边界：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;text(&lt;span class=&quot;string&quot;&gt;&quot;Righteously&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stroke(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;strokeWeight(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;line(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.width,&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stroke(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;line(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;-textAscent(),&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.width,&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;-textAscent());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stroke(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;line(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;+textDescent(),&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.width,&lt;span class=&quot;number&quot;&gt;200&lt;/span&gt;+textDescent());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/img1.png&quot; alt=&quot;Text Default Vertical Alignment&quot;&gt;&lt;/p&gt;
&lt;p&gt;但使用Wiki示例的字体后则完美对齐：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;textFont(createFont(&lt;span class=&quot;string&quot;&gt;&quot;Adobe Caslon Pro&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/img5.png&quot; alt=&quot;Adobe Caslon Pro&quot;&gt;&lt;/p&gt;
&lt;p&gt;因此，就目前本人使用的processing-2.2.1版本来说，ascent与descent值仅与字体大小有关，而不受字体类型的影响，并且返回的是各自相对baseline的位移，而不是具体的坐标值。这就意味着Processing返回的值与用户使用的字体无关，使用API只能得出字形的上限和下限，无法精确地计算出实际字形中上述几条线的位置。下面以默认对齐为例来计算字形五线的位置。下图的三段文字的字体分别是微软雅黑、Adobe Caslon Pro和Times New Roman Italic，大小均为75，代码与结果如下（请忽略语法错误，懒得重新截图了）：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;String chineseStr = &lt;span class=&quot;string&quot;&gt;&quot;尺寸不是问题！&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String englishStr1 = &lt;span class=&quot;string&quot;&gt;&quot;Er... Size is not an problem&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;String englishStr2 = &lt;span class=&quot;string&quot;&gt;&quot;Even it&#39;s OBLIQUE!&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; x1 = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, x2 = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, x3 = &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, y1= &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;, y2 = &lt;span class=&quot;number&quot;&gt;300&lt;/span&gt;, y3 = &lt;span class=&quot;number&quot;&gt;500&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textFont(createFont(&lt;span class=&quot;string&quot;&gt;&quot;MSYH&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;75&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;text(&lt;span class=&quot;string&quot;&gt;&quot;尺寸不是问题！&quot;&lt;/span&gt;, x1, y1);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textFont(createFont(&lt;span class=&quot;string&quot;&gt;&quot;Adobe Caslon Pro&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;75&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;text(englishStr1, x2, y2);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textFont(createFont(&lt;span class=&quot;string&quot;&gt;&quot;Times New Roman Italic&quot;&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;75&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;text(englishStr2, x3, y3);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/img6.png&quot; alt=&quot;Not at all #1&quot;&gt;&lt;/p&gt;
&lt;p&gt;在Processing中，baseline对齐就是默认的对齐方式，假设文字&lt;code&gt;text(string, x, y)&lt;/code&gt;则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;baseline = y&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;descent = y + textDescent()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ascent = y - textAscent()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;是显而易见的，把这三条线画出来效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/img7.png&quot; alt=&quot;Not at all #2&quot;&gt;&lt;/p&gt;
&lt;p&gt;这三种字体中，只有Adobe Caslon Pro能够严丝合缝地对齐，而微软雅黑和斜体的Times New Roman上部都留有大量空白，而中文字符甚至不跟baseline对齐。另外，假设一行文字的总高度为textHeight，则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;textHeight = textDescent() + textAscent()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果能画出给定文字的四条边界（左右边界较好理解，这里不赘述，可参考&lt;a href=&quot;https://www.processing.org/reference/textWidth_.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;textWidth&lt;/a&gt;方法），那么也就可以算出给定四边界下合适的文字大小是多少了，这就可以解决我的问题了。另外，字形五线的另外两条可能就更不准确了。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;The vertical alignment is based on the value of textAscent(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;which many fonts do not specify correctly. It may be necessary to use a&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;hack and offset by a few pixels by hand so that the offset looks&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;correct. To do this as less of a hack, use some percentage of&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;textAscent() or textDescent() so that the hack works even&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if you change the size of the font.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;好吧，那就根据这个来大概估算一下cap height和x-height的位置吧。首先是cap height，按定义，它应该位于大写字母S的顶部，但是很不幸地维基的描述至少在Processing里是不准确的，大写S实际上跟小写的b与l一样，顶端位于ascent的位置。不同的字体cap height的位置实在是差别太大。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/img8.png&quot; alt=&quot;Not at all #3&quot;&gt;&lt;/p&gt;
&lt;p&gt;对于Adobe Caslon Pro字体来说，仔细看大写字母E其实是略低于ascent位置的，而这才是它cap height的真正位置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/img9.png&quot; alt=&quot;Not at all #4&quot;&gt;&lt;/p&gt;
&lt;p&gt;但这个差距实在太小了，以至于在75的字符大小下仍然只有一像素的间隙，因此说Adobe Caslon Pro字体的cap height = ascent是合适的。而对于另外两种字体来说，取下面这个公式是合适的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;capHeight = y - 0.74 * textAscent()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/img10.png&quot; alt=&quot;Not at all #5&quot;&gt;&lt;/p&gt;
&lt;p&gt;而对于x-height，维基上说是位于baseline到cap height距离的一半。但经过实验实际上只有中间那种字体符合这个描述，同时也可观察到，三种字体的x-height是比较接近的，因此可以假设这里实际上应该是baseline到ascent距离的一半，效果如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/img11.png&quot; alt=&quot;Not at all #6&quot;&gt;&lt;/p&gt;
&lt;p&gt;可以看出前两种字体是越过了那条金线的，但是考虑到x-height的位置也是跟字体密切相关的，并且实验用的字符尺寸实际上非常大，因此以下计算是合适的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;xHeight = y - 0.5 * textAscent()&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&quot;其他对齐方式&quot;&gt;&lt;a href=&quot;#其他对齐方式&quot; class=&quot;headerlink&quot; title=&quot;其他对齐方式&quot;&gt;&lt;/a&gt;其他对齐方式&lt;/h1&gt;&lt;p&gt;查看Processing的&lt;a href=&quot;https://github.com/kinyue/processing/blob/master/core/src/processing/core/PGraphics.java&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;源代码&lt;/a&gt;，可以发现textAlign()调用的是类PGraphics中的方法，在这个类里，垂直对齐的默认值是baseline对齐：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/** The current vertical text alignment (read-only) */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; textAlignY = BASELINE;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;而当用户使用text(String, float, float)方法显示字符时，该方法内部会根据当前的对齐方式做如下处理:&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// If multiple lines, sum the height of the additional lines&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;float&lt;/span&gt; high = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//-textAscent();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = start; i &amp;lt; stop; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (chars[i] == &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       high += textLeading;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (textAlignY == CENTER) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// for a single line, this adds half the textAscent to y&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// for multiple lines, subtract half the additional height&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//y += (textAscent() - textDescent() - high)/2;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y += (textAscent() - high)/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (textAlignY == TOP) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// for a single line, need to add textAscent to y&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// for multiple lines, no different&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y += textAscent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (textAlignY == BOTTOM) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// for a single line, this is just offset by the descent&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// for multiple lines, subtract leading for each line&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;y -= textDescent() + high;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//&amp;#125; else if (textAlignY == BASELINE) &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// do nothing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;考虑单行的情况，则high为0，函数里会重新计算y的值，这意味着实际的字形五线产生了偏移。若由用户传入y值算出的baseline为y，而重新计算得到的baseline为y’，则CENTER对齐下这五条线的坐标如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;y&amp;#39; = y + textAscent() / 2&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;descent&amp;#39; = y&amp;#39; + textDescent() = y + textAscent() / 2 + textDescent()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ascent&amp;#39; = y&amp;#39; - textAscent() = y - textAscent() / 2&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;capHeight&amp;#39; = y&amp;#39; - 0.74 * textAscent() = y - 0.24 * textAscent()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;xHeight&amp;#39; = y&amp;#39; - 0.5 * textAscent() = y&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下图是重新计算后画出的字形五线，其中白色的是用户传入的初始y值：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/img12.png&quot; alt=&quot;Not at all #7&quot;&gt;&lt;/p&gt;
&lt;p&gt;其它对齐方式可同理算出，此处不再赘述。&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&quot;多行对齐&quot;&gt;&lt;a href=&quot;#多行对齐&quot; class=&quot;headerlink&quot; title=&quot;多行对齐&quot;&gt;&lt;/a&gt;多行对齐&lt;/h1&gt;&lt;p&gt;首先使用Adobe Caslon Pro字体以及默认对齐方式来显示多行字符字符，可以看出，此时Processing相关函数返回的值只是字符第一行的相关值，以下是代码和结果：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;textSize(&lt;span class=&quot;number&quot;&gt;60&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;text(&lt;span class=&quot;string&quot;&gt;&quot;Live high, \nlive righteously. \nJust take it easy~&quot;&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;strokeWeight(&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stroke(&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;line(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.width,&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stroke(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;line(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;-textAscent(),&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.width,&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;-textAscent());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stroke(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;line(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;+textDescent(),&lt;span class=&quot;keyword&quot;&gt;this&lt;/span&gt;.width,&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;+textDescent());&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/img13.png&quot; alt=&quot;Multiple lines text&quot;&gt;&lt;/p&gt;
&lt;p&gt;Adobe Caslon Pro字体刚好能填充Ascent到Descent之间的空间，因此由上图可以看出两行字符之间其实是有留空的。这里就设计到一个叫&lt;a href=&quot;https://www.processing.org/reference/textLeading_.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;textLeading&lt;/a&gt;的概念了。textLeading意味着两行文字之间的留白，把它的值设分别设为0和textAscent() + textDescent()是这样的：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;textLeading(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/img14.png&quot; alt=&quot;TextLeading 0&quot;&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;textLeading(textAscent() + textDescent());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//textSize(float)函数会将textLeading重置为默认值&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/processing-textalignment/img15.png&quot; alt=&quot;TextLeading A+D&quot;&gt;&lt;/p&gt;
&lt;p&gt;而这个值它在Processing中的默认是&lt;code&gt;textLeading = (textAscent() + textDescent()) * 1.275f&lt;/code&gt;。有上一节的源代码，可以很容易得出整段多行文本的上下边界，以默认对齐为例，假设文本有n行，textLeading值为lead，用户传入text的坐标为(x, y)，文本上边界为&lt;code&gt;multi_ascent&lt;/code&gt;，下边界为&lt;code&gt;multi_descent&lt;/code&gt;，第k行文字的baseline、ascent和descent为&lt;code&gt;baseline_k&lt;/code&gt;、&lt;code&gt;ascent_k&lt;/code&gt;和&lt;code&gt;descent_k&lt;/code&gt;，则：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;multi_ascent = y - textAscent()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;multi_descent = y + textDescent() + lead * (n - 1)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;baseline_k = y + lead * (k - 1)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ascent_k = y + lead * (k - 1) - textAscent()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;descent_k = y + lead * (k - 1) + textDescent()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&quot;应用&quot;&gt;&lt;a href=&quot;#应用&quot; class=&quot;headerlink&quot; title=&quot;应用&quot;&gt;&lt;/a&gt;应用&lt;/h1&gt;&lt;p&gt;能够算出这些线的坐标之后，给定一串字符，设定好大小、位置、对齐方式之后，可以很容易地算出能紧密包围这串文字的矩形位置。另一方面，对于给定的矩形与对齐方式，也不难反推出在矩形中显示这串字符合适的大小是多少。进一步地，如果需要将文字与圆、椭圆或者多边形关联，可以先计算出这些图形的内接矩形，再将其与文字关联，这部分内容将另文讨论。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;几个排版的概念&quot;&gt;&lt;a href=&quot;#几个排版的概念&quot; class=&quot;headerlink&quot; title=&quot;几个排版的概念&quot;&gt;&lt;/a&gt;几个排版的概念&lt;/h1&gt;&lt;p&gt;Processing中有几个跟文字有关的API让我很困惑。比如它有获取文字所占长度的textWidt
    
    </summary>
    
      <category term="Notes" scheme="http://kinyue.github.io/categories/Notes/"/>
    
    
      <category term="processing" scheme="http://kinyue.github.io/tags/processing/"/>
    
  </entry>
  
  <entry>
    <title>Processing 安装与基本用法</title>
    <link href="http://kinyue.github.io/2014/12/14/start-processing/"/>
    <id>http://kinyue.github.io/2014/12/14/start-processing/</id>
    <published>2014-12-14T04:21:04.000Z</published>
    <updated>2016-04-24T05:05:56.260Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Processing-介绍&quot;&gt;&lt;a href=&quot;#Processing-介绍&quot; class=&quot;headerlink&quot; title=&quot;Processing 介绍&quot;&gt;&lt;/a&gt;Processing 介绍&lt;/h2&gt;&lt;p&gt;找这个软件起因于记笔记的时候需要画一些图，而我又不太喜欢用Visio这类软件，一来体积庞大，二来可重用的东西太少。从原则上来讲，记笔记要用的图片大都是一些矢量图，但是用鼠标拖拽来画图的方式总感觉与矢量图格格不入，效率也太低。我因此希望找到一款软件，能够通过编写代码的方式来方便的生成图片，于是想起了以前留意过的一个叫Processing的项目。&lt;br&gt;Processing是怎样的一个东西呢？引用官网的描述：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Processing is a programming language, development environment, and online community. Since 2001, Processing has promoted software literacy within the visual arts and visual literacy within technology.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单来讲就是一套用于绘图的编程语言以及对应的开发环境。总体上来讲，似乎用户里设计师与数字艺术家占的比例大一些，用来制作示意图或者UML之类并不一定很合适。但是一来实在没有其他替代选项，二来展示的作品实在过于酷炫，所以毅然决定入坑。以下图片都是Processing自带的Sample，所写不过二三十行代码，却能表现出很好的效果。&lt;br&gt;首先是这张简单的点阵图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/start-processing/simple_sample.png&quot; alt=&quot;Simple Sample&quot;&gt;&lt;br&gt;原图是动态的，小圆点会在初始位置附近以一定的幅度随机晃动。&lt;br&gt;以下图片是在鼠标从左边移动到右边时，多边形的边数不断增加的过程：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/start-processing/TriangleStrip_1.png&quot; alt=&quot;TriangleStrip_1&quot;&gt;&lt;br&gt;&lt;img src=&quot;/imgs/start-processing/TriangleStrip_2.png&quot; alt=&quot;TriangleStrip_2&quot;&gt;&lt;br&gt;&lt;img src=&quot;/imgs/start-processing/TriangleStrip_3.png&quot; alt=&quot;TriangleStrip_3&quot;&gt;&lt;/p&gt;
&lt;p&gt;还有一些复杂的几何图形以及数据可视化图形：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/start-processing/tree.png&quot; alt=&quot;tree&quot;&gt;&lt;br&gt;&lt;img src=&quot;/imgs/start-processing/data_visualization_1.png&quot; alt=&quot;data_visualization_1&quot;&gt;&lt;br&gt;&lt;img src=&quot;/imgs/start-processing/data_visualization_2.png&quot; alt=&quot;data_visualization_2&quot;&gt;&lt;/p&gt;
&lt;p&gt;上面举的例子里，几何图形、数据表达等等正是我想要的，但是网上搜了一圈似乎没有现成的用于画流程图以及示意图的库，看来真要用上还得靠自己造轮子了。&lt;/p&gt;
&lt;h2 id=&quot;安装与运行&quot;&gt;&lt;a href=&quot;#安装与运行&quot; class=&quot;headerlink&quot; title=&quot;安装与运行&quot;&gt;&lt;/a&gt;安装与运行&lt;/h2&gt;&lt;p&gt;Processing是一款绿色软件，官网上可找到下载链接。当前版本（2.2.1）解压后有自带有一个Java的运行时环境。解压完毕后打开“processing.exe”便可直接编写代码并运行，同时在[File]-&amp;gt;[Examples]可以看到官方提供的许多例子。由于Processing部分函数会使用openGL加速，如果显卡不支持或者驱动程序老旧可能会导致运行时报错。解决办法也很简单：把显卡驱动更新到最新版本，或者，换一个显卡吧！&lt;br&gt;Processing自带的IDE朴素简洁，但是菜单栏里点了一圈好像没有Debug功能，而且每次新建一个Sketch都会打开一个新窗口，用起来不是很顺手。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/start-processing/Processing_IDE_1.png&quot; alt=&quot;Default IDE&quot;&gt;&lt;/p&gt;
&lt;p&gt;当然可以使用其他流行的IDE来替换，以Sublime Text 2为例，大致的配置步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;将Processing路径添加到PATH环境变量中。&lt;/li&gt;
&lt;li&gt;在Sublime Text中安装Processing的Package。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;更详细的步骤可以在Github上找到。在Sublime上编写程序方便快捷，但是由于没有足够好的插件，创建项目依然不方便，同样也不能Debug，所以看来还是要回到Eclipse的怀抱。所幸，在Eclipse上配置Processing开发环境比想象中还要容易。在安装好Eclipse和Processing的基础上，基本上也就两个步骤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;创建项目并且导入\processing-2.2.1\core\library下的core.jar。&lt;/li&gt;
&lt;li&gt;把core.jar加入到Build Path中。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;语法简介&quot;&gt;&lt;a href=&quot;#语法简介&quot; class=&quot;headerlink&quot; title=&quot;语法简介&quot;&gt;&lt;/a&gt;语法简介&lt;/h2&gt;&lt;p&gt;从上面Eclipse的配置也可以看出，Processing是基于Java开发的。在官方提供的教程中可以看到用户编写的Processing启动类是要继承类processing.core.PApplet的。基于这个名字，和程序能以Java Applet的方式运行两点，有理由认为Processing其实是基于Applet实现的。&lt;br&gt;查看PApplet源代码，可以发现有一段注释如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* As of Processing 3.0, we have removed Applet as the base class for PApplet.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* This means that we can remove lots of legacy code, however one downside is&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* that it&#39;s no longer possible (without extra code) to embed a PApplet into&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* another Java application.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;使用Java语法编程大大降低了许多程序员的学习成本，但是也带来性能方面的一些忧虑。虽然看低Java性能表现可以说是一种刻板印象，实际上我也不知道其他语言在图形编程方面的表现如何，但我的电脑跑Examples里稍微大一些的程序确实会比较吃力。&lt;br&gt;在Processing上绘制图形非常简单。使用自带IDE的话可以直接调用函数绘制图形，比如画一条直线是将起始点与终止点的坐标传给line()函数：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;line(&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;85&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;75&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//line(x1, y1, x2, y2);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这里涉及到Procesing的坐标系，在Processing中以size(width,height)函数来定义画板大小，以画板的最左上角为(0,0)点，X轴与Y轴的增长方向如图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/start-processing/coordinate.png&quot; alt=&quot;coordinate&quot;&gt;&lt;/p&gt;
&lt;p&gt;矩形与椭圆形（圆形）则由前两个参数确定图形“左上角”的位置，后两个参数则分别定义图形在X轴上的宽度以及Y轴上的高度：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//set up the weight of border line&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;strokeWeight(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//set up the color to fill the shape and border line&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fill(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;stroke(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//draw rectangle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rect(&lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;150&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//draw circle&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ellipse(&lt;span class=&quot;number&quot;&gt;250&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;250&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;得到的图形如下：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/start-processing/draw_rect_circle.png&quot; alt=&quot;Rectangle and Circle&quot;&gt;&lt;/p&gt;
&lt;p&gt;从上面代码可以看出，程序设置图形的边框颜色和填充颜色，调用的既不是属于图形对象的函数，也不将图形的对象作为参数传给函数，因此，Processing中很多函数比如fill(float RGB)和strokeWeight(float weight)做的都是全局设置。也即是说，一旦你设置了某个公共属性，后面的所有图形都自动带有这个属性，如果需要改变这个设置，则要重新调用属性函数。&lt;br&gt;另外，Processing的一大强项是动画处理。以下几张据说是来自柏林的David Whyte用Processing制作的Gif图片，动画处理能力可见一斑。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/imgs/start-processing/sample_gif_1.gif&quot; alt=&quot;gif1&quot;&gt;&lt;br&gt;&lt;img src=&quot;/imgs/start-processing/sample_gif_2.gif&quot; alt=&quot;gif2&quot;&gt;&lt;br&gt;&lt;img src=&quot;/imgs/start-processing/sample_gif_3.gif&quot; alt=&quot;gif3&quot;&gt;&lt;br&gt;&lt;img src=&quot;/imgs/start-processing/sample_gif_4.gif&quot; alt=&quot;gif4&quot;&gt;&lt;/p&gt;
&lt;p&gt;要使画面动起来其实也很方便，类PApplet中有以下两个函数：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;...&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;...&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;程序启动后会先后调用setup()和draw()。其中setup()用于做一些准备工作，设置一些全局属性之类，它只会执行一次。而draw()函数则会无限循环，直到程序关闭或者调用了noLoop()函数。可用frameRate()来设置draw()在一秒内被调用的次数。而在draw()函数里，获取图形的当前状态与位置，然后在下一帧新的位置画出新状态的图形，这样便形成了动画。&lt;/p&gt;
&lt;p&gt;以上，2014/12/20 0:58&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Processing-介绍&quot;&gt;&lt;a href=&quot;#Processing-介绍&quot; class=&quot;headerlink&quot; title=&quot;Processing 介绍&quot;&gt;&lt;/a&gt;Processing 介绍&lt;/h2&gt;&lt;p&gt;找这个软件起因于记笔记的时候需要画一些图，而我又不太
    
    </summary>
    
      <category term="Tools" scheme="http://kinyue.github.io/categories/Tools/"/>
    
    
      <category term="processing" scheme="http://kinyue.github.io/tags/processing/"/>
    
  </entry>
  
  <entry>
    <title>No Man Is An Island</title>
    <link href="http://kinyue.github.io/2014/12/02/no-man-is-an-island/"/>
    <id>http://kinyue.github.io/2014/12/02/no-man-is-an-island/</id>
    <published>2014-12-02T04:05:04.000Z</published>
    <updated>2016-04-24T05:00:40.611Z</updated>
    
    <content type="html">&lt;p&gt;&lt;em&gt;–John Donne&lt;/em&gt;&lt;br&gt;No man is an island,&lt;br&gt;entire of itself;&lt;br&gt;every man is a piece of the continent,&lt;br&gt;a part of the main.&lt;br&gt;If a clod be washed away by the sea,&lt;br&gt;Europe is the less,&lt;br&gt;as well as if a promontory were,&lt;br&gt;as well as if a manor of thy friend’s or of thine own were:&lt;br&gt;any man’s death diminishes me,&lt;br&gt;because I am involved in mankind,&lt;br&gt;and, therefore,&lt;br&gt;never send to know for whom the bells tolls;&lt;br&gt;&lt;strong&gt;it tolls for thee.&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;–John Donne&lt;/em&gt;&lt;br&gt;No man is an island,&lt;br&gt;entire of itself;&lt;br&gt;every man is a piece of the continent,&lt;br&gt;a part of the main.&lt;br&gt;If 
    
    </summary>
    
      <category term="Noisy" scheme="http://kinyue.github.io/categories/Noisy/"/>
    
    
  </entry>
  
</feed>
